
-- wega time
; eclipse / intelliJ plugin
stat your code

>> day 1
; 2.5.1

; agreement
- dir structure
-- workspace
|--- day1
|
- gitignore
- origin name

-- local git
; distribute from offline codebase to remote server
$ git [cmd] [option]

1.
; start git in current directory
$ git init

; start git somewhere else
$ git init path/to/dir/

2.
$ git status

3.
$ git config -l

$ git config --global user.name "Pichaya Morimoto"
$ git config --global user.email "pich4ya@googlemail.com"


4.
$ vim w00t.txt
$ git status
	Untracked files: w00t.txt

5.
$ git add w00t.txt
	Changes to be committed: w00t.txt
6.
$ git commit -m 'Created test file w00t.txt'
	[master (root-commit) 994e259] Created test file w00t.txt
	 1 file changed, 1 insertion(+)
	 create mode 100644 w00t.txt

$ git status
	On branch master
	nothing to commit, working directory clean

7.
; commit log
$ git log

8. 
$ vim w00t.txt
$ git status
$ git diff
	diff --git a/w00t.txt b/w00t.txt
	index 27fd9f7..65eee1e 100644
	--- a/w00t.txt
	+++ b/w00t.txt
	@@ -1 +1,2 @@
	 he110 w0r1d
	+hello Somkiat.cc

9.
9.1 roll back
$ git checkout -- w00t.txt
$ git status
	; clean

9.2 
$ git add w00t.txt
$ git diff
	; nothing
$ git diff --cached
	; diff...
$ git commit -m "Add first & second line"
$ git status
	; clean

10. 
$ .gitignore
	*.class

11.
; git remote <action> <name-remote>
; action => add / delete / remove

$ git remote add origin git@github.com:pich4ya/git-workshop-day-1.git

$ git config -l
...
remote.origin.url=git@github.com:pich4ya/git-workshop-day-1.git
remote.origin.fetch=+refs/heads/*:refs/remotes/origin/*

$ vim vim .git/config 
; config is here

12.
$ git push origin master

13.
; update from repo
$ git pull origin master

git shortlog
git log --oneline


--

14.
$ git reset HEAD pichaya

; add more files to current commit
$ git commit --amend -m 'type si krub'

$ git log --stat
; show diff in stat


git log --oneline --decorate --graph
git log --author=pich4ya
; grep from log message
git log --grep="[filter]"
; grep from file content
git log -S "[content]"

--after 
--before
--since
--until 

-- link commit to issue
1. just link
#[issue-number]
2. fix
; fixeds fix fixes
fixed #[issue-number]

-- git survive cmd!
status, add, commit, log, diff, checkout

